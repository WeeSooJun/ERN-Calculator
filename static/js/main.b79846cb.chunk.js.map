{"version":3,"sources":["index.js"],"names":["ALL_OP","INITIAL_EXPR","numberToString","valueToID","value","Button","props","className","onClick","id","Window","Board","i","this","renderButton","React","Component","Calculator","state","expr","handleEqualsClick","handleACClick","handleDotClick","handleNumClick","handleOpClick","setState","num","prev","new_expr","includes","length","concat","slice","String","console","log","op","prop","math","join","handleClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b79846cb.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from  'react-dom';\r\nimport './index.css'\r\nimport * as math from 'mathjs';\r\n\r\nconst ALL_OP = [\"+\",\"-\",\"/\",\"*\"];\r\nconst INITIAL_EXPR = [\"0\"];\r\nconst numberToString = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"];\r\n\r\nfunction valueToID(value) {\r\n  if (typeof value === \"number\") {\r\n    return numberToString[value]\r\n  } else {\r\n    switch (value) {\r\n      case \"AC\":\r\n        return \"AC\";\r\n      case \"+\":\r\n        return \"plus\";\r\n      case \"-\":\r\n        return \"minus\";\r\n      case \"*\":\r\n        return \"times\";\r\n      case \"/\":\r\n        return \"divide\";\r\n      case \".\":\r\n        return \"decimal\";\r\n      case \"=\":\r\n        return \"equals\";\r\n    }\r\n  }\r\n}\r\n\r\nfunction Button(props) {\r\n  return (\r\n    <button className = \"button\" onClick={props.onClick} id={valueToID(props.value)}>\r\n      {props.value}\r\n    </button>\r\n  )\r\n}\r\n\r\nfunction Window(props) {\r\n  return (\r\n    <div className=\"window\" id=\"display\">\r\n      {props.value}\r\n    </div>\r\n  )\r\n}\r\n\r\nclass Board extends React.Component {\r\n\r\n  renderButton(i) {\r\n    return (\r\n      <Button \r\n        value ={i}\r\n        onClick={() => this.props.onClick(i)}\r\n      />\r\n    );\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"calc-row\">\r\n          {this.renderButton(7)}\r\n          {this.renderButton(8)}\r\n          {this.renderButton(9)}\r\n          {this.renderButton(\"+\")}\r\n        </div>\r\n        <div className=\"calc-row\">\r\n          {this.renderButton(4)}\r\n          {this.renderButton(5)}\r\n          {this.renderButton(6)}\r\n          {this.renderButton(\"-\")}\r\n        </div>\r\n        <div className=\"calc-row\">\r\n          {this.renderButton(1)}\r\n          {this.renderButton(2)}\r\n          {this.renderButton(3)}\r\n          {this.renderButton(\"*\")}\r\n        </div>\r\n        <div className=\"calc-row\">\r\n          {this.renderButton(0)}\r\n          {this.renderButton(\".\")}\r\n          {this.renderButton(\"=\")}\r\n          {this.renderButton(\"/\")}\r\n        </div>\r\n        <div className=\"calc-row\">\r\n          {this.renderButton(\"AC\")}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n  \r\nclass Calculator extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      expr : INITIAL_EXPR\r\n    };\r\n  }\r\n\r\n  handleClick(i) {\r\n    if (i === \"=\") {\r\n      this.handleEqualsClick();\r\n    } else if (i === \"AC\") {\r\n      this.handleACClick();\r\n    } else if (i === \".\") { \r\n      this.handleDotClick();\r\n    } else if (typeof i === \"number\") {\r\n      this.handleNumClick(i);\r\n    } else {\r\n      this.handleOpClick(i);\r\n    }\r\n  }\r\n\r\n  handleACClick() {\r\n    this.setState({expr: INITIAL_EXPR});\r\n  }\r\n\r\n  handleNumClick(num) {\r\n    this.setState((prev, props) => {\r\n      let new_expr = ALL_OP.includes(prev.expr[prev.expr.length-1]) ? prev.expr.concat([\"0\"]) : prev.expr;\r\n      new_expr = new_expr[new_expr.length-1] === \"0\" || new_expr[new_expr.length-1] === \"-0\" ? new_expr.slice(0,new_expr.length-1).concat(new_expr[new_expr.length-1].slice(0, new_expr[new_expr.length-1].length-1) + num) : new_expr.slice(0,new_expr.length-1).concat([new_expr[new_expr.length-1] + num]);\r\n      if (new_expr.length === 1 && (new_expr[0].includes(\"Infinity\") || new_expr[0].includes(\"NaN\"))) {\r\n        new_expr = [String(num)];\r\n      }\r\n      console.log(new_expr);\r\n      return { expr: new_expr };\r\n    });\r\n  }\r\n\r\n  handleOpClick(op) {\r\n    this.setState((prev,prop) => {\r\n      let new_expr;\r\n      if (op === \"-\") {\r\n        if (ALL_OP.includes(prev.expr[prev.expr.length-1])) {\r\n          new_expr = prev.expr.concat([op + \"0\"]);\r\n        } else if (prev.expr[prev.expr.length-1] ===\"-0\") {\r\n          new_expr = prev.expr;\r\n        } else {\r\n          new_expr = prev.expr.concat([op]);\r\n        }\r\n      } else {\r\n        if (ALL_OP.includes(prev.expr[prev.expr.length-1])) {\r\n          new_expr = prev.expr.slice(0,prev.expr.length-1).concat([op]);\r\n        } else {\r\n          new_expr = prev.expr.concat([op]);\r\n        }\r\n      }\r\n      console.log(new_expr);\r\n      return { expr: new_expr };\r\n    });\r\n  }\r\n\r\n  handleEqualsClick() {\r\n    this.setState((prev, props) => {\r\n      const new_expr = ALL_OP.includes(prev.expr[prev.expr.length-1]) ? prev.expr.slice(0, prev.expr.length-1) : prev.expr;\r\n      return { expr: [String(math.evaluate(new_expr.join(\"\")))] }\r\n    });\r\n  }\r\n\r\n  handleDotClick() {\r\n    this.setState((prev, props) => {\r\n      const new_expr = ALL_OP.includes(prev.expr[prev.expr.length-1]) ? prev.expr.concat(\"0.\") : \r\n        prev.expr[prev.expr.length-1].includes(\".\") ? prev.expr : prev.expr.slice(0,prev.expr.length-1).concat([prev.expr[prev.expr.length-1] + \".\"]);\r\n      return { expr: new_expr };\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"calculator\">\r\n        <div className=\"calculator-board\">\r\n          <Window value= {this.state.expr.join(\"\")} />\r\n          <Board \r\n            onClick = {(i) => this.handleClick(i)}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n  \r\n  // ========================================\r\n  \r\nReactDOM.render(\r\n  <Calculator />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}